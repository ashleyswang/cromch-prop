extern func read_nd_nodes(graph_name : string);

element Vertex end
element Edge end

const edges : edgeset{Edge}(Vertex,Vertex);
const vertices : vertexset{Vertex};
const nondeterministic : vector{Vertex}(bool);

% filters nodes that are nondeterministic
func ndFilter(v : Vertex) -> output : bool
  output = nondeterministic[v];
end

% updates node to be nondeterministic
func updateFlag(src : Vertex, dst : Vertex)
  nondeterministic[dst] = true;
end

% filters nodes that are not nondeterministic
func toFilter(v : Vertex) -> output : bool
  output = not nondeterministic[v];
end

export func gt_prop_flags(graph : string)
  edges = load(graph);
  vertices = edges.getVertices();
  nondeterministic = new vector{Vertex}(bool)();
  read_nd_nodes(graph);

  var frontier : vertexset{Vertex} = vertices.filter(ndFilter);

  while (frontier.getVertexSetSize() != 0)
    var output : vertexset{Vertex};
    #s1# output = edges.from(frontier).to(toFilter).applyModified(updateFlag, nondeterministic, true);
    delete frontier;
    frontier = output;
  end
  delete frontier;
end